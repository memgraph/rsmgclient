name: CI

on: 
  pull_request:
    branches: [ master ]

jobs:
  build_and_test_ubuntu:
    strategy:
     matrix:
        platform: [ubuntu-24.04]
        mgversion: [latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Install system dependencies
      run: sudo apt-get install -y git cmake make gcc g++ libssl-dev
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Run rust linter
      run: cargo clippy
    - name: Run rust formatter
      run: cargo fmt -- --check
    - name: Build the project
      run: cargo build --verbose
    - name: Run Memgraph
      run: |
        docker run -d -p 7687:7687 memgraph/memgraph:${{ matrix.mgversion }} --telemetry-enabled=False
    - name: Run test
      run: cargo test

  build_centos:
    runs-on: ubuntu-latest
    container: 
      image: centos:8
    steps:
    - name: Modify repo files of centos image
      run: |
        sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
        sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*

    - name: Install dependencies
      run: |
        yum install -y git cmake make gcc gcc-c++ openssl-devel epel-release clang

    - name: Install rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build the project
      run: |
        . "$HOME/.cargo/env"
        cargo build --release

  build_macos:
    strategy:
      matrix:
        platform: [macos-latest]
        target: [x86_64-apple-darwin]
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Install Rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
        sh rustup-init.sh -y --default-toolchain none
        rustup target add ${{ matrix.target }}

    - uses: actions/checkout@v4
      with:
          submodules: true

    - name: Build the client
      run: cargo build --release

  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Install OpenSSL via vcpkg
      run: |
        vcpkg install openssl:x64-windows-static
        
    - name: Build the client
      run: cargo build --release --target=x86_64-pc-windows-msvc
      env:
        OPENSSL_LIB_DIR: "C:\\vcpkg\\installed\\x64-windows-static\\lib"
        OPENSSL_INCLUDE_DIR: "C:\\vcpkg\\installed\\x64-windows-static\\include"
        OPENSSL_STATIC: "1"
