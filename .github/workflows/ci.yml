name: CI

on: [push]

jobs:
  build_and_test:
    strategy:
     matrix:
        platform: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.platform }}
    env:
      MG_VERSION: "1.5.0"

    steps:
    - name: Install system dependencies
      run: sudo apt-get install -y git cmake make gcc g++ libssl-dev

    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install mgclient
      run: |
        cd mgclient
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=output ..
        make
        make install

    # https://brandur.org/fragments/github-actions-env-vars-in-env-vars
    - name: "Set environment variables"
      run: |
        echo "C_INCLUDE_PATH=$C_INCLUDE_PATH:$GITHUB_WORKSPACE/mgclient/build/output/include" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GITHUB_WORKSPACE/mgclient/build/output/lib" >> $GITHUB_ENV

    - name: Cache Memgraph Docker image
      id: cache-memgraph-docker
      uses: actions/cache@v1
      with:
        path: ~/memgraph
        key: cache-memgraph-v${MG_VERSION}-docker-image
    - name: Download Memgraph Docker image
      if: steps.cache-memgraph-docker.outputs.cache-hit != 'true'
      run: |
        mkdir ~/memgraph
        curl -L https://memgraph.com/download/memgraph/v${MG_VERSION}/docker/memgraph-${MG_VERSION}-community-docker.tar.gz > ~/memgraph/memgraph-docker.tar.gz
    - name: Load Memgraph Docker image
      run: docker load -i ~/memgraph/memgraph-docker.tar.gz

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run rust linter
      run: cargo clippy
    - name: Run rust formatter
      run: cargo fmt -- --check
    - name: Build the project
      run: cargo build --verbose

    - name: Run Memgraph
      run: |
        docker run -d -p 7687:7687 memgraph --telemetry-enabled=False

    - name: Run cargo-tarpaulin
      uses: actions-rs/tarpaulin@v0.1.2
      with:
        args: '--out Html --ignore-tests'

    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: tarpaulin-report.html
